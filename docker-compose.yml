version: "3"
services:
  middleware:
    build:
      dockerfile: dockerfiles/DockerfileMiddleware
      context: .
    restart: always
    env_file: .env
    volumes:
      - ./data/data:/data
    depends_on:
      - serving
      - rabbitmq
      - statistics_handler
  serving:
    image: pytorch/torchserve:0.6.0-cpu
    command: torchserve --start --ts-config /home/model-server/deployment_data/config.properties --models resnet-18=resnet-18.mar
    restart: always
    volumes:
      - ./src/serving/deployment_data:/home/model-server/deployment_data
    ports:
      - 8081:8081
  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/data:/data:ro
      - ./data/reports:/reports:ro
    command: nginx -g 'daemon off;';
    ports:
      - 8078:8078
  rabbitmq:
    image: rabbitmq
    restart: always
  postgres:
    image: postgres:13.4-alpine
    restart: always
    env_file: .env
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - ./db_utils/:/docker-entrypoint-initdb.d
    ports:
      - 5433:5432
  statistics_handler:
    build:
      dockerfile: dockerfiles/DockerfileStatisticsHandler
      context: .
    restart: always
    env_file: .env
    volumes:
      - ./data/reports:/reports
    depends_on:
      - rabbitmq
      - postgres
  ui:
    build:
      dockerfile: dockerfiles/DockerfileUI
      context: .
    restart: always
    env_file: .env
    depends_on:
      - nginx
    ports:
      - 8501:8501
  grafana:
    image: grafana/grafana-oss:latest
    restart: always
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  postgresql-data:
    driver: local
